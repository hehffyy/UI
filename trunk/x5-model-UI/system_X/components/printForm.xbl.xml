<?xml version="1.0" encoding="UTF-8"?>
<xbl:xbl xmlns="http://www.w3.org/ns/xbl"
	xmlns:xbl="http://www.w3.org/ns/xbl"
	xmlns:xhtml="http://www.w3.org/1999/xhtml"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xsl:version="2.0"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xforms="http://www.justep.com/xforms"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	script-type="text/javascript"> 

	<xbl:binding id="printForm">
		<xbl:template template-type="xslt">
			<xsl:template match="/*">
				<xsl:variable name="image">
					<xsl:choose>
						<xsl:when test="@src != ''">
							<xsl:value-of select="if(starts-with(@src, '/UI')) then @src else concat('/UI',@src)" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of
								select="'/UI/system/images/demo/print.gif'" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="dis-image">
					<xsl:choose>
						<xsl:when test="@dis-src != ''">
							<xsl:value-of select="if(starts-with(@dis-src, '/UI')) then @dis-src else concat('/UI',@dis-src)" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of
								select="'/UI/system/images/demo/print.gif'" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="appearance">
					<xsl:choose>
						<xsl:when test="@appearance != ''">
							<xsl:value-of select="@appearance" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of
								select="'button'" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="style">
					<xsl:value-of select="'height:100%;width:100%;'" />
<!--					<xsl:choose>-->
<!--						<xsl:when test="$appearance = 'button'">-->
<!--							<xsl:value-of select="'height:100%;width:100%;'" />-->
<!--						</xsl:when>-->
<!--						<xsl:otherwise>-->
<!--							<xsl:value-of-->
<!--								select="''" />-->
<!--						</xsl:otherwise>-->
<!--					</xsl:choose>-->
				</xsl:variable>
				<xsl:variable name="appearance-mode">
					<xsl:choose>
						<xsl:when test="@image-text-mode != ''">
							<xsl:value-of select="@image-text-mode" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of
								select="''" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="label">
					<xsl:choose>
						<xsl:when test="@label != ''">
							<xsl:value-of select="@label" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of>i18n{print}</xsl:value-of>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<root xbl:class="{concat('xui-printHtml-btn ',@class)}" xmlns:xbl="http://www.w3.org/ns/xbl">
					<xforms:trigger style="{concat('margin: 0 auto; ',$style)}" class="{concat('xui-no-border ',@class)}" id="{concat('trigger-',@id)}" appearance="{$appearance}" mode="{$appearance-mode}" tabindex="{@tabindex}" accesskey="{@accesskey}" readonly="{@readonly}" disabled="{@disabled}" icon-class="{@icon-class}">
						<xsl:if test="not(@icon-class) or (@icon-class = '')">
							<xsl:attribute name="src" select="$image"/>
							<xsl:attribute name="dis-src" select="$dis-image"/>
						</xsl:if>	
						<xforms:label><xsl:value-of select="$label"/></xforms:label>
					</xforms:trigger>
				</root>			
									
			</xsl:template>	 
		</xbl:template>
		
		<xbl:implementation>
		<![CDATA[
		({
			"initXBL" : function() {
				var self = this;
			    self.__attribute_node = this.getElementByXblID('attribute');
			    self.url = self.domNode.getAttribute("url");
				self.title = self.domNode.getAttribute("title");
				self.label = self.domNode.getAttribute("label");
				var onSend = self.domNode.getAttribute("onSend")
				if (onSend && onSend != "") self.onSend = eval(onSend);
				
				jQuery(this.domNode).bind("click",$.proxy(self.print, self));
			},
			
			"print" : function(isPreview){
				var self = this;
				require([ "base/plugins/PrintForm" ],
					function(PrintForm) {
						var options = {
							url : self.url,
							title : self.title || self.label,
							onSend : self.onSend
						};
						var printForm = new PrintForm(options);
						printForm.execute();
					},
					function(err){
						alert(err);
					});			
			},
			
			"_getTriggerObj" : function() {
				return justep.xbl('trigger-'+this.domNode.id);
			},
			
			
			"setTabIndex" : function(tabIndex){
				var o = this._getTriggerObj();
				if(o) o.setTabIndex(tabIndex);
			},
			
			"getTabIndex" : function(){
				var o = this._getTriggerObj();
				if(o) return o.getTabIndex();
			},		
				
			"setAccessKey" : function(key){
				var o = this._getTriggerObj();
				if(o) o.setAccessKey(key);
			},			
			"getAccessKey" : function(){
				var o = this._getTriggerObj();
				if(o) return o.getAccessKey();
			},	
					
			"setDisabled" : function(disabled){
				var o = this._getTriggerObj();
				if(o) o.setDisabled(disabled);
			},			
			"getDisabled" : function(){
				var o = this._getTriggerObj();
				if(o) return o.getDisabled();
			},
			
			"__getAttributeValue" : function(name){
				return this.__attribute_node?this.__attribute_node.getAttribute(name):'';
			}
		})
		]]>	
		</xbl:implementation>

		<xbl:resources>
			<xbl:style>
			<![CDATA[
			 
			]]>
			</xbl:style>
		</xbl:resources>				
		
	</xbl:binding>
</xbl:xbl>